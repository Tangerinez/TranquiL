<header>

    <!-- Header Nav Section    -->
    <nav class="mainHeader z-depth-0">
        
        <div class="nav-wrapper">

            <a href="/" class="brand-logo"><img src="/assets/images/Tranquil_Logo.png" height="auto" width="275" alt="Tranquil"></a>

            <ul id="nav-mobile" class="right hide-on-med-and-down">
                <li><a class="black-text" href="/">Home</a></li>
            </ul>

        </div>

    </nav>
	
</header>



<!--div for stress meter, boiler plate -->
<div class="container">
    <!-- Page Content goes here -->
    <div class="row">
        <div class="col s4">
            <!-- Stress Meter Content -->
            <div class="outer">
                <div id="container-speed" class="chart-container"></div>
            </div>
            <p class="light-center">
                {{description}}
            </p>
        </div>
        <div class="col s4">
            <!-- Meditation Content -->
            <div id="meditation-player"></div>
            <p class="light-center">
                Meditation description!
            </p>
        </div>

        <div class="col s4">
            <!-- Youtube Exercise/Yoga Content -->
            <div id="exercise-player"></div>

            <p class="light-center">
                Exercise is important!
            </p>
        </div>
    </div>
</div>

<script type="text/javascript">
    var gaugeOptions = {
        chart: {
            type: "solidgauge"
        },

        title: null,

        pane: {
            center: ["50%", "85%"],
            size: "160%",
            startAngle: -90,
            endAngle: 90,
            background: {
                backgroundColor:
                    (Highcharts.theme &&
                        Highcharts.theme.background2) ||
                    "#EEE",
                innerRadius: "60%",
                outerRadius: "100%",
                shape: "arc"
            }
        },

        tooltip: {
            enabled: false
        },

        // the value axis
        yAxis: {
            stops: [
                [0.1, "#55BF3B"], // green
                [0.5, "#DDDF0D"], // yellow
                [0.9, "#DF5353"] // red
            ],
            lineWidth: 0,
            minorTickInterval: null,
            tickAmount: 2,
            title: {
                y: -70
            },
            labels: {
                y: 16
            }
        },

        plotOptions: {
            solidgauge: {
                dataLabels: {
                    y: 5,
                    borderWidth: 0,
                    useHTML: true
                }
            }
        }
    };

    // The speed gauge
    var chartSpeed = Highcharts.chart(
        "container-speed",
        Highcharts.merge(gaugeOptions, {
            yAxis: {
                min: 0,
                max: 100,
                title: {
                    text: ""
                }
            },

            credits: {
                enabled: false
            },

            series: [
                {
                    name: "Speed",
                    //this is the user's score//
                    data: [75],
                    dataLabels: {
                        format:
                            '<div style="text-align:center"><span style="font-size:25px;color:' +
                            ((Highcharts.theme &&
                                Highcharts.theme.contrastTextColor) ||
                                "black") +
                            '">{y}</span><br/>' +
                            '<span style="font-size:12px;color:silver">stress meter</span></div>'
                    },
                    tooltip: {
                        valueSuffix: " stress meter"
                    }
                }
            ]
        })
    );
</script>
<script>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement("script");

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName("script")[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var meditationplayer;
    var exerciseplayer;
    function onYouTubeIframeAPIReady() {
        meditationplayer = new YT.Player("meditation-player", {
            height: "200",
            width: "300",
            videoId: "{{ meditation }}",
            events: {
                onStateChange: onPlayerStateChange
            }
        });
        exerciseplayer = new YT.Player("exercise-player", {
            height: "200",
            width: "300",
            videoId: "{{ exercise }}",
            events: {
                onStateChange: onPlayerStateChange
            }
        });
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
        event.target.playVideo();
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    var done = false;
    function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }
    function stopVideo() {
        player.stopVideo();
    }
</script>


<!-- Site Footer -->
<footer style="position:fixed;bottom:0;left:0;width:100%;">

    <div class="footer-copyright">

        <div id="footer-content">
            Â© 2019 Copyright
            <a class="black-text right" href="/">Home</a>
        </div>
    </div>
</footer>